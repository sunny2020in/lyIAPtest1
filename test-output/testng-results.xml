<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="5" total="16" passed="10">
  <reporter-output>
  </reporter-output>
  <suite name="测试套件" duration-ms="90343" started-at="2021-02-25T06:38:04Z" finished-at="2021-02-25T06:39:34Z">
    <groups>
      <group name="功能测试">
        <method signature="DataProviderTest.testAdd1(int, int, int)[pri:0, instance:test.sample.DataProviderTest@646be2c3]" name="testAdd1" class="test.sample.DataProviderTest"/>
        <method signature="TagTest.testCase1()[pri:0, instance:test.sample.TagTest@3c0a50da]" name="testCase1" class="test.sample.TagTest"/>
        <method signature="TagTest.testCase2()[pri:0, instance:test.sample.TagTest@3c0a50da]" name="testCase2" class="test.sample.TagTest"/>
        <method signature="TagTest.testCase3()[pri:0, instance:test.sample.TagTest@3c0a50da]" name="testCase3" class="test.sample.TagTest"/>
      </group> <!-- 功能测试 -->
      <group name="高">
        <method signature="TagTest.testCase1()[pri:0, instance:test.sample.TagTest@3c0a50da]" name="testCase1" class="test.sample.TagTest"/>
        <method signature="TagTest.testCase2()[pri:0, instance:test.sample.TagTest@3c0a50da]" name="testCase2" class="test.sample.TagTest"/>
      </group> <!-- 高 -->
      <group name="正常">
        <method signature="TagTest.testCase1()[pri:0, instance:test.sample.TagTest@3c0a50da]" name="testCase1" class="test.sample.TagTest"/>
        <method signature="TagTest.testCase2()[pri:0, instance:test.sample.TagTest@3c0a50da]" name="testCase2" class="test.sample.TagTest"/>
        <method signature="TagTest.testCase3()[pri:0, instance:test.sample.TagTest@3c0a50da]" name="testCase3" class="test.sample.TagTest"/>
      </group> <!-- 正常 -->
      <group name="中">
        <method signature="TagTest.testCase3()[pri:0, instance:test.sample.TagTest@3c0a50da]" name="testCase3" class="test.sample.TagTest"/>
      </group> <!-- 中 -->
    </groups>
    <test name="简单测试1" duration-ms="50251" started-at="2021-02-25T06:38:04Z" finished-at="2021-02-25T06:38:54Z">
      <class name="com.test.api.test2">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.test.api.test2@4df828d7]" name="beforeClass" is-config="true" duration-ms="22" started-at="2021-02-25T06:38:04Z" finished-at="2021-02-25T06:38:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.test.api.test2@4df828d7]" name="before" is-config="true" duration-ms="2" started-at="2021-02-25T06:38:04Z" finished-at="2021-02-25T06:38:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.test.api.test2@4df828d7]" name="before" is-config="true" duration-ms="1" started-at="2021-02-25T06:38:04Z" finished-at="2021-02-25T06:38:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testCase1()[pri:0, instance:com.test.api.test2@4df828d7]" name="testCase1" duration-ms="50059" started-at="2021-02-25T06:38:04Z" finished-at="2021-02-25T06:38:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase1 -->
        <test-method status="PASS" signature="testCase2()[pri:0, instance:com.test.api.test2@4df828d7]" name="testCase2" duration-ms="30079" started-at="2021-02-25T06:38:04Z" finished-at="2021-02-25T06:38:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase2 -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.test.api.test2@4df828d7]" name="after" is-config="true" duration-ms="1" started-at="2021-02-25T06:38:34Z" finished-at="2021-02-25T06:38:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.test.api.test2@4df828d7]" name="after" is-config="true" duration-ms="1" started-at="2021-02-25T06:38:54Z" finished-at="2021-02-25T06:38:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.test.api.test2@4df828d7]" name="afterClass" is-config="true" duration-ms="1" started-at="2021-02-25T06:38:54Z" finished-at="2021-02-25T06:38:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.test.api.test2 -->
      <class name="com.test.api.test1">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.test.api.test1@b59d31]" name="beforeClass" is-config="true" duration-ms="22" started-at="2021-02-25T06:38:04Z" finished-at="2021-02-25T06:38:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.test.api.test1@b59d31]" name="before" is-config="true" duration-ms="1" started-at="2021-02-25T06:38:04Z" finished-at="2021-02-25T06:38:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.test.api.test1@b59d31]" name="before" is-config="true" duration-ms="0" started-at="2021-02-25T06:38:04Z" finished-at="2021-02-25T06:38:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.test.api.test1@b59d31]" name="before" is-config="true" duration-ms="0" started-at="2021-02-25T06:38:04Z" finished-at="2021-02-25T06:38:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="getMembershipActive()[pri:0, instance:com.test.api.test1@b59d31]" name="getMembershipActive" duration-ms="38722" started-at="2021-02-25T06:38:04Z" finished-at="2021-02-25T06:38:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMembershipActive -->
        <test-method status="PASS" signature="GetParam()[pri:0, instance:com.test.api.test1@b59d31]" name="GetParam" duration-ms="40317" started-at="2021-02-25T06:38:04Z" description="case1" finished-at="2021-02-25T06:38:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetParam -->
        <test-method status="PASS" signature="postRecommendAlbums()[pri:0, instance:com.test.api.test1@b59d31]" name="postRecommendAlbums" duration-ms="46972" started-at="2021-02-25T06:38:04Z" finished-at="2021-02-25T06:38:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postRecommendAlbums -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.test.api.test1@b59d31]" name="after" is-config="true" duration-ms="5" started-at="2021-02-25T06:38:43Z" finished-at="2021-02-25T06:38:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.test.api.test1@b59d31]" name="after" is-config="true" duration-ms="1" started-at="2021-02-25T06:38:45Z" finished-at="2021-02-25T06:38:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.test.api.test1@b59d31]" name="after" is-config="true" duration-ms="0" started-at="2021-02-25T06:38:51Z" finished-at="2021-02-25T06:38:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.test.api.test1@b59d31]" name="afterClass" is-config="true" duration-ms="1" started-at="2021-02-25T06:38:51Z" finished-at="2021-02-25T06:38:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.test.api.test1 -->
    </test> <!-- 简单测试1 -->
    <test name="简单测试2" duration-ms="10014" started-at="2021-02-25T06:38:59Z" finished-at="2021-02-25T06:39:09Z">
      <class name="com.test.api.test3">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.test.api.test3@27c6e487]" name="beforeClass" is-config="true" duration-ms="0" started-at="2021-02-25T06:38:59Z" finished-at="2021-02-25T06:38:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.test.api.test3@27c6e487]" name="before" is-config="true" duration-ms="0" started-at="2021-02-25T06:38:59Z" finished-at="2021-02-25T06:38:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="FAIL" signature="testCase1()[pri:0, instance:com.test.api.test3@27c6e487]" name="testCase1" duration-ms="5012" started-at="2021-02-25T06:38:59Z" finished-at="2021-02-25T06:39:04Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<2> but was:<3>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<2> but was:<3>
at org.testng.AssertJUnit.fail(AssertJUnit.java:59)
at org.testng.AssertJUnit.failNotEquals(AssertJUnit.java:364)
at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:80)
at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:245)
at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:252)
at com.test.api.test3.testCase1(test3.java:37)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase1 -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.test.api.test3@27c6e487]" name="before" is-config="true" duration-ms="1" started-at="2021-02-25T06:38:59Z" finished-at="2021-02-25T06:38:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testCase2()[pri:0, instance:com.test.api.test3@27c6e487]" name="testCase2" duration-ms="10002" started-at="2021-02-25T06:38:59Z" finished-at="2021-02-25T06:39:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase2 -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.test.api.test3@27c6e487]" name="after" is-config="true" duration-ms="1" started-at="2021-02-25T06:39:04Z" finished-at="2021-02-25T06:39:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.test.api.test3@27c6e487]" name="after" is-config="true" duration-ms="2" started-at="2021-02-25T06:39:09Z" finished-at="2021-02-25T06:39:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.test.api.test3@27c6e487]" name="afterClass" is-config="true" duration-ms="0" started-at="2021-02-25T06:39:09Z" finished-at="2021-02-25T06:39:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.test.api.test3 -->
    </test> <!-- 简单测试2 -->
    <test name="简单测试3" duration-ms="20022" started-at="2021-02-25T06:39:14Z" finished-at="2021-02-25T06:39:34Z">
      <class name="test.sample.TagTest">
        <test-method status="PASS" signature="testCase1()[pri:0, instance:test.sample.TagTest@3c0a50da]" name="testCase1" duration-ms="5006" started-at="2021-02-25T06:39:14Z" finished-at="2021-02-25T06:39:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase1 -->
        <test-method status="PASS" signature="testCase2()[pri:0, instance:test.sample.TagTest@3c0a50da]" name="testCase2" duration-ms="20018" started-at="2021-02-25T06:39:14Z" finished-at="2021-02-25T06:39:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase2 -->
        <test-method status="PASS" signature="testCase3()[pri:0, instance:test.sample.TagTest@3c0a50da]" name="testCase3" duration-ms="15013" started-at="2021-02-25T06:39:14Z" finished-at="2021-02-25T06:39:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase3 -->
      </class> <!-- test.sample.TagTest -->
      <class name="test.sample.DataProviderTest">
        <test-method status="PASS" signature="testAdd1(int, int, int)[pri:0, instance:test.sample.DataProviderTest@646be2c3]" name="testAdd1" duration-ms="10003" started-at="2021-02-25T06:39:14Z" finished-at="2021-02-25T06:39:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd1 -->
      </class> <!-- test.sample.DataProviderTest -->
    </test> <!-- 简单测试3 -->
  </suite> <!-- 测试套件 -->
</testng-results>
